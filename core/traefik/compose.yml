services:
  traefik:
    image: traefik:v3.3
    container_name: traefik
    ports:
      - "80:80"
      - "8443:443"
      - "8080:8080"
    networks:
      - proxy
    env_file:
      - .env
    environment:
      # ONLY THE WORKING CLOUDFLARE ENVIRONMENT VARIABLES
      - CLOUDFLARE_EMAIL=${CLOUDFLARE_EMAIL}
      - CLOUDFLARE_DNS_API_TOKEN=${CLOUDFLARE_DNS_API_TOKEN}
      - CLOUDFLARE_ZONE_ID=${CLOUDFLARE_ZONE_ID}
    volumes:
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
        read_only: true
      - ./traefik-data/traefik.yml:/traefik.yml:ro
      - ./traefik-data/acme.json:/etc/traefik/acme.json
      - ./traefik-data/dynamic:/dynamic:ro
      - ./traefik-data:/traefik-data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik-secure.entrypoints=websecure"
      - "traefik.http.routers.traefik-secure.rule=Host(`traefik.delo.sh`)"
      - "traefik.http.routers.traefik-secure.service=api@internal"
      - "traefik.http.routers.traefik-secure.tls=true"
      - "traefik.http.routers.traefik-secure.tls.certresolver=letsencrypt"
    command:
      - "--api.dashboard=true"
      - "--metrics.prometheus=true"
      - "--metrics.prometheus.buckets=0.1,0.3,1.2,5.0"
      - "--log.level=DEBUG"
      - "--accesslog=true"
    restart: unless-stopped

  whoami:
    image: traefik/whoami
    container_name: traefik-test-whoami
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.entrypoints=websecure"
      - "traefik.http.routers.whoami.rule=Host(`whoami.localhost`)"
      - "traefik.http.routers.whoami.tls=true"
      - "traefik.docker.network=proxy"

  assets-nginx:
    image: nginx:alpine
    container_name: assets-nginx
    networks:
      - proxy
    volumes:
      - ./assets:/usr/share/nginx/html:ro
      - ./assets/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.assets.entrypoints=websecure"
      - "traefik.http.routers.assets.rule=Host(`assets.delo.sh`)"
      - "traefik.http.routers.assets.tls=true"
      - "traefik.http.routers.assets.tls.certresolver=letsencrypt"
      - "traefik.docker.network=proxy"
    restart: unless-stopped

networks:
  proxy:
    external: true

