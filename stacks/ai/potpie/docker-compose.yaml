services:
  postgres:
    image: postgres:latest
    container_name: potpie_postgres
    environment:
      POSTGRES_USER: ${PGUSER}
      POSTGRES_PASSWORD: ${PGPASS}
      POSTGRES_DB: ${PGDB}
    ports:
      - "${PGPORT}:5432"
    networks:
      - potpienet
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  momentum:
    build: .
    container_name: potpie_app
    environment:
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - BROKER_URL=redis://redis:6379/0
      - CELERY_QUEUE_NAME=${CELERY_QUEUE_NAME}
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USERNAME=${NEO4J_USERNAME}
      - NEO4J_PASSWORD=${NEO4J_PASSWORD}
      - POSTGRES_SERVER=postgresql://${PGUSER}:${PGPASS}@postgres:5432/${PGDB}
      - LLM_PROVIDER=${LLM_PROVIDER}
      - LLM_API_KEY=${LLM_API_KEY}
      - LOW_REASONING_MODEL=${LOW_REASONING_MODEL}
      - HIGH_REASONING_MODEL=${HIGH_REASONING_MODEL}
      - isDevelopmentMode=${isDevelopmentMode}
      - ENV=${ENV}
      - defaultUsername=${defaultUsername}
    volumes:
      - .:/app
    ports:
      - "8001:8001"
    networks:
      - potpienet
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
      neo4j:
        condition: service_started

  neo4j:
    image: neo4j:latest
    container_name: potpie_neo4j
    environment:
      NEO4J_AUTH: ${NEO4J_USERNAME}/${NEO4J_PASSWORD}
      NEO4JLABS_PLUGINS: '["apoc"]'
      NEO4J_dbms_security_procedures_unrestricted: 'apoc.*'
      NEO4J_dbms_memory_transaction_total_max: 0
      NEO4J_ACCEPT_LICENSE_AGREEMENT: 'yes'
    ports:
      - "7474:7474"
      - "7687:7687"
    networks:
      - potpienet

  redis:
    image: redis:latest
    container_name: potpie_redis_broker
    ports:
      - "${REDISPORT}:6379"
    networks:
      - potpienet

networks:
  potpienet:
    driver: bridge
