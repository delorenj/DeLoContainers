{"content":"\n\n  [![](https://sst.dev/_astro/logo-dark.DpZ7_bWK.svg) ![](https://sst.dev/_astro/logo-light.BYAt7w5s.svg) SST](/)\n\n[Blog](/blog/)\n [Docs](/docs/)\n [Examples](/docs/examples/)\n\n[23K](https://github.com/sst/sst)\n\nAI Search CtrlK\n\nCancel\n\n[Console](https://console.sst.dev)\n\n*   [Intro](/docs)\n    \n*   [Workflow](/docs/workflow)\n    \n*   [Enterprise](/docs/enterprise)\n    \n*   Get Started\n    \n    *   [Bun](/docs/start/aws/bun)\n        \n    *   [Nuxt](/docs/start/aws/nuxt)\n        \n    *   [Solid](/docs/start/aws/solid)\n        \n    *   [Auth](/docs/start/aws/auth)\n        \n    *   [Deno](/docs/start/aws/deno)\n        \n    *   [tRPC](/docs/start/aws/trpc)\n        \n    *   [Hono](/docs/start/aws/hono)\n        \n    *   [Astro](/docs/start/aws/astro)\n        \n    *   [Email](/docs/start/aws/email)\n        \n    *   [Remix](/docs/start/aws/remix)\n        \n    *   [Svelte](/docs/start/aws/svelte)\n        \n    *   [Drizzle](/docs/start/aws/drizzle)\n        \n    *   [Prisma](/docs/start/aws/prisma)\n        \n    *   [Next.js](/docs/start/aws/nextjs)\n        \n    *   [Analog](/docs/start/aws/analog)\n        \n    *   [NestJS](/docs/start/aws/nestjs)\n        \n    *   [Angular](/docs/start/aws/angular)\n        \n    *   [Express](/docs/start/aws/express)\n        \n    *   [Realtime](/docs/start/aws/realtime)\n        \n    *   Cloudflare\n        \n        *   [tRPC](/docs/start/cloudflare/trpc)\n            \n        *   [Hono](/docs/start/cloudflare/hono)\n            \n        *   [Worker](/docs/start/cloudflare/worker)\n            \n        \n    \n*   Concepts\n    \n    *   [Live](/docs/live)\n        \n    *   [State](/docs/state)\n        \n    *   [Linking](/docs/linking)\n        \n    *   [Console](/docs/console)\n        \n    *   [Providers](/docs/providers)\n        \n    *   [Components](/docs/components)\n        \n    \n*   How to\n    \n    *   [AWS Accounts](/docs/aws-accounts)\n        \n    *   [IAM Credentials](/docs/iam-credentials)\n        \n    *   [Migrate From v2](/docs/migrate-from-v2)\n        \n    *   [Custom Domains](/docs/custom-domains)\n        \n    *   [Import Resources](/docs/import-resources)\n        \n    *   [Set up a Monorepo](/docs/set-up-a-monorepo)\n        \n    *   [Share Across Stages](/docs/share-across-stages)\n        \n    *   [Reference Resources](/docs/reference-resources)\n        \n    *   [Environment Variables](/docs/environment-variables)\n        \n    \n*   Components\n    \n    *   AWS\n        \n        *   [Efs](/docs/component/aws/efs)\n            \n        *   [Bus](/docs/component/aws/bus)\n            \n        *   [Vpc](/docs/component/aws/vpc)\n            \n        *   [Task](/docs/component/aws/task)\n            \n        *   [Cron](/docs/component/aws/cron)\n            \n        *   [Auth](/docs/component/aws/auth)\n            \n        *   [Nuxt](/docs/component/aws/nuxt)\n            \n        *   [Astro](/docs/component/aws/astro)\n            \n        *   [Redis](/docs/component/aws/redis)\n            \n        *   [Email](/docs/component/aws/email)\n            \n        *   [React](/docs/component/aws/react)\n            \n        *   [Remix](/docs/component/aws/remix)\n            \n        *   [Nextjs](/docs/component/aws/nextjs)\n            \n        *   [Queue](/docs/component/aws/queue)\n            \n        *   [Vector](/docs/component/aws/vector)\n            \n        *   [Aurora](/docs/component/aws/aurora)\n            \n        *   [Router](/docs/component/aws/router)\n            \n        *   [Analog](/docs/component/aws/analog)\n            \n        *   [Bucket](/docs/component/aws/bucket)\n            \n        *   [Cluster](/docs/component/aws/cluster)\n            \n        *   [Service](/docs/component/aws/service)\n            \n        *   [Dynamo](/docs/component/aws/dynamo)\n            \n        *   [Realtime](/docs/component/aws/realtime)\n            \n        *   [SnsTopic](/docs/component/aws/sns-topic)\n            \n        *   [Function](/docs/component/aws/function)\n            \n        *   [Postgres](/docs/component/aws/postgres)\n            \n        *   [AppSync](/docs/component/aws/app-sync)\n            \n        *   [SvelteKit](/docs/component/aws/svelte-kit)\n            \n        *   [StaticSite](/docs/component/aws/static-site)\n            \n        *   [SolidStart](/docs/component/aws/solid-start)\n            \n        *   [OpenControl](/docs/component/aws/opencontrol)\n            \n        *   [TanStackStart](/docs/component/aws/tan-stack-start)\n            \n        *   [KinesisStream](/docs/component/aws/kinesis-stream)\n            \n        *   [ApiGatewayV1](/docs/component/aws/apigatewayv1)\n            \n        *   [ApiGatewayV2](/docs/component/aws/apigatewayv2)\n            \n        *   [CognitoUserPool](/docs/component/aws/cognito-user-pool)\n            \n        *   [CognitoIdentityPool](/docs/component/aws/cognito-identity-pool)\n            \n        *   [ApiGatewayWebSocket](/docs/component/aws/apigateway-websocket)\n            \n        *   Internal\n            \n            *   [Cdn](/docs/component/aws/cdn)\n                \n            *   [AppSyncResolver](/docs/component/aws/app-sync-resolver)\n                \n            *   [AppSyncFunction](/docs/component/aws/app-sync-function)\n                \n            *   [BucketNotification](/docs/component/aws/bucket-notification)\n                \n            *   [AppSyncDataSource](/docs/component/aws/app-sync-data-source)\n                \n            *   [ApiGatewayV1ApiKey](/docs/component/aws/apigatewayv1-api-key)\n                \n            *   [BusQueueSubscriber](/docs/component/aws/bus-queue-subscriber)\n                \n            *   [CognitoUserPoolClient](/docs/component/aws/cognito-user-pool-client)\n                \n            *   [BusLambdaSubscriber](/docs/component/aws/bus-lambda-subscriber)\n                \n            *   [ApiGatewayV2UrlRoute](/docs/component/aws/apigatewayv2-url-route)\n                \n            *   [ApiGatewayV1Authorizer](/docs/component/aws/apigatewayv1-authorizer)\n                \n            *   [ApiGatewayV1UsagePlan](/docs/component/aws/apigatewayv1-usage-plan)\n                \n            *   [ApiGatewayV2Authorizer](/docs/component/aws/apigatewayv2-authorizer)\n                \n            *   [QueueLambdaSubscriber](/docs/component/aws/queue-lambda-subscriber)\n                \n            *   [SnsTopicQueueSubscriber](/docs/component/aws/sns-topic-queue-subscriber)\n                \n            *   [DynamoLambdaSubscriber](/docs/component/aws/dynamo-lambda-subscriber)\n                \n            *   [RealtimeLambdaSubscriber](/docs/component/aws/realtime-lambda-subscriber)\n                \n            *   [SnsTopicLambdaSubscriber](/docs/component/aws/sns-topic-lambda-subscriber)\n                \n            *   [ApiGatewayV1LambdaRoute](/docs/component/aws/apigatewayv1-lambda-route)\n                \n            *   [ApiGatewayV2LambdaRoute](/docs/component/aws/apigatewayv2-lambda-route)\n                \n            *   [ApiGatewayWebSocketRoute](/docs/component/aws/apigateway-websocket-route)\n                \n            *   [ApiGatewayV1IntegrationRoute](/docs/component/aws/apigatewayv1-integration-route)\n                \n            *   [KinesisStreamLambdaSubscriber](/docs/component/aws/kinesis-stream-lambda-subscriber)\n                \n            \n        *   Deprecated\n            \n            *   [Vpc.v1](/docs/component/aws/vpc-v1)\n                \n            *   [Cluster.v1](/docs/component/aws/cluster-v1)\n                \n            *   [Postgres.v1](/docs/component/aws/postgres-v1)\n                \n            \n        \n    *   Cloudflare\n        \n        *   [Kv](/docs/component/cloudflare/kv)\n            \n        *   [D1](/docs/component/cloudflare/d1)\n            \n        *   [Worker](/docs/component/cloudflare/worker)\n            \n        *   [Bucket](/docs/component/cloudflare/bucket)\n            \n        \n    *   Internal\n        \n        *   Dns\n            \n            *   [AWS](/docs/component/aws/dns)\n                \n            *   [Vercel](/docs/component/vercel/dns)\n                \n            *   [Cloudflare](/docs/component/cloudflare/dns)\n                \n            \n        *   Linkable\n            \n            *   [binding](/docs/component/cloudflare/binding)\n                \n            *   [permission](/docs/component/aws/permission)\n                \n            \n        \n    *   [All Providers](/docs/all-providers)\n        \n    \n*   Reference\n    \n    *   [CLI](/docs/reference/cli)\n        \n    *   [SDK](/docs/reference/sdk)\n        \n    *   [Global](/docs/reference/global)\n        \n    *   [Config](/docs/reference/config)\n        \n    *   [Secret](/docs/component/secret)\n        \n    *   [Linkable](/docs/component/linkable)\n        \n    *   [DevCommand](/docs/component/experimental/dev-command)\n        \n    \n*   [Examples](/docs/examples)\n    \n*   [Common Errors](/docs/common-errors)\n    \n\n[Blog](/blog/)\n [Docs](/docs/)\n [Examples](/docs/examples/)\n\n[X](https://x.com/SST_dev)\n [Discord](https://sst.dev/discord)\n [GitHub](https://github.com/sst/sst)\n\nOn this page\n\n*   [Overview](#_top)\n    \n*   [Components](#components)\n    \n*   [Infrastructure](#infrastructure)\n    *   [Configure](#configure)\n        \n    *   [Providers](#providers)\n        \n*   [Link resources](#link-resources)\n    \n*   [Project structure](#project-structure)\n    *   [Drop-in mode](#drop-in-mode)\n        \n    *   [Monorepo](#monorepo)\n        \n*   [CLI](#cli)\n    *   [Dev](#dev)\n        \n    *   [Deploy](#deploy)\n        \n*   [Console](#console)\n    \n*   [FAQ](#faq)\n    \n\nOn this page\n------------\n\n*   [Overview](#_top)\n    \n*   [Components](#components)\n    \n*   [Infrastructure](#infrastructure)\n    *   [Configure](#configure)\n        \n    *   [Providers](#providers)\n        \n*   [Link resources](#link-resources)\n    \n*   [Project structure](#project-structure)\n    *   [Drop-in mode](#drop-in-mode)\n        \n    *   [Monorepo](#monorepo)\n        \n*   [CLI](#cli)\n    *   [Dev](#dev)\n        \n    *   [Deploy](#deploy)\n        \n*   [Console](#console)\n    \n*   [FAQ](#faq)\n    \n\nWhat is SST\n===========\n\nBuild full-stack apps on your own infrastructure.\n\nSST is a framework that makes it easy to build modern full-stack applications on your own infrastructure.\n\nNote\n\nSST supports over 150 providers. Check out the [full list](/docs/all-providers#directory)\n.\n\nWhat makes SST different is that your _entire_ app is **defined in code** — in a single `sst.config.ts` file. This includes databases, buckets, queues, Stripe webhooks, or any one of **150+ providers**.\n\nWith SST, **everything is automated**.\n\n* * *\n\n[Components](#components)\n\n--------------------------\n\nYou start by defining parts of your app, _**in code**_.\n\nFor example, you can add your frontend and set the domain you want to use.\n\n*   [Next.js](#tab-panel-8)\n    \n*   [Remix](#tab-panel-9)\n    \n*   [Astro](#tab-panel-10)\n    \n*   [Svelte](#tab-panel-11)\n    \n*   [Solid](#tab-panel-12)\n    \n\nsst.config.ts\n\n    new sst.aws.Nextjs(\"MyWeb\", {  domain: \"my-app.com\"});\n\nsst.config.ts\n\n    new sst.aws.Remix(\"MyWeb\", {  domain: \"my-app.com\"});\n\nsst.config.ts\n\n    new sst.aws.Astro(\"MyWeb\", {  domain: \"my-app.com\"});\n\nsst.config.ts\n\n    new sst.aws.SvelteKit(\"MyWeb\", {  domain: \"my-app.com\"});\n\nsst.config.ts\n\n    new sst.aws.SolidStart(\"MyWeb\", {  domain: \"my-app.com\"});\n\nJust like the frontend, you can configure backend features _in code_.\n\nLike your API deployed in a container. Or any Lambda functions, Postgres databases, S3 Buckets, or cron jobs.\n\n*   [Containers](#tab-panel-13)\n    \n*   [Functions](#tab-panel-14)\n    \n*   [Postgres](#tab-panel-15)\n    \n*   [Bucket](#tab-panel-16)\n    \n*   [Cron](#tab-panel-17)\n    \n\nsst.config.ts\n\n    const cluster = new sst.aws.Cluster(\"MyCluster\", { vpc });\n    new sst.aws.Service(\"MyService\", {  cluster,  loadBalancer: {    ports: [{ listen: \"80/http\" }]  }});\n\nsst.config.ts\n\n    new sst.aws.Function(\"MyFunction\", {  handler: \"src/lambda.handler\"});\n\nsst.config.ts\n\n    new sst.aws.Postgres(\"MyDatabase\", { vpc });\n\nsst.config.ts\n\n    new sst.aws.Bucket(\"MyBucket\");\n\nsst.config.ts\n\n    new sst.aws.Cron(\"MyCronJob\", {  job: \"src/cron.handler\",  schedule: \"rate(1 minute)\"});\n\nYou can even set up your Stripe products in code.\n\nsst.config.ts\n\n    new stripe.Product(\"MyStripeProduct\", {  name: \"SST Paid Plan\",  description: \"This is how SST makes money\",});\n\nYou can check out the full list of components in the sidebar.\n\n* * *\n\n[Infrastructure](#infrastructure)\n\n----------------------------------\n\nThe above are called **Components**. They are a way of defining the features of your application in code. You can define any feature of your application with them.\n\nIn the above examples, they create the necessary infrastructure in your AWS account. All without using the AWS Console.\n\nLearn more about [Components](/docs/components/)\n.\n\n* * *\n\n### [Configure](#configure)\n\nSST’s components come with sensible defaults designed to get you started. But they can also be configured completely.\n\nFor example, the `sst.aws.Function` can be configured with all the common Lambda function options.\n\nsst.config.ts\n\n    new sst.aws.Function(\"MyFunction\", {  handler: \"src/lambda.handler\",  timeout: \"3 minutes\",  memory: \"1024 MB\"});\n\nBut with SST you can take it a step further and transform how the Function component creates its low level resources. For example, the Function component also creates an IAM Role. You can transform the IAM Role using the `transform` prop.\n\nsst.config.ts\n\n    new sst.aws.Function(\"MyFunction\", {  handler: \"src/lambda.handler\",  transform: {    role: (args) => ({      name: `${args.name}-MyRole`    })  }});\n\nLearn more about [transforms](/docs/components#transforms)\n.\n\n* * *\n\n### [Providers](#providers)\n\nSST has built-in components for AWS and Cloudflare that make these services easier to use.\n\n[Watch a video about providers in SST](https://youtu.be/rlR2f5N9mW4)\n\nHowever it also supports components from any one of the **150+ Pulumi/Terraform providers**. For example, you can use Vercel for your frontends.\n\nsst.config.ts\n\n    new vercel.Project(\"MyFrontend\", {  name: \"my-nextjs-app\"});\n\nLearn more about [Providers](/docs/providers)\n and check out the full list in the [Directory](/docs/all-providers#directory)\n.\n\n* * *\n\n[Link resources](#link-resources)\n\n----------------------------------\n\nOnce you’ve added a couple of features, SST can help you link them together. This is great because you **won’t need to hardcode** anything in your app.\n\n[Watch a video on linking resources](https://youtu.be/s8cWklU4Akw)\n\nLet’s say you are deploying an Express app in a container and you want to upload files to an S3 bucket. You can `link` the bucket to your container.\n\nsst.config.ts\n\n    const bucket = new sst.aws.Bucket(\"MyBucket\");\n    const cluster = new sst.aws.Cluster(\"MyCluster\", { vpc });\n    new sst.aws.Service(\"MyService\", {  cluster,  link: [bucket],  loadBalancer: {    ports: [{ listen: \"80/http\" }]  }});\n\nYou can then use SST’s [SDK](/docs/reference/sdk/)\n to access the S3 bucket in your Express app.\n\nindex.mjs\n\n    import { Resource } from \"sst\";\n    console.log(Resource.MyBucket.name);\n\nLearn more about [resource linking](/docs/linking/)\n.\n\n* * *\n\n[Project structure](#project-structure)\n\n----------------------------------------\n\nWe’ve looked at a couple of different types of files. Let’s take a step back and see what an SST app looks like in practice.\n\n[Watch a video about SST's project structure](https://youtu.be/mserRA-CWRw)\n\n* * *\n\n### [Drop-in mode](#drop-in-mode)\n\nThe simplest way to run SST is to use it as a part of your app. This is called _drop-in mode_. For example, if you are building a Next.js app, you can add a `sst.config.ts` file to the root.\n\n    my-nextjs-app├─ next.config.js├─ sst.config.ts├─ package.json├─ app├─ lib└─ public\n\nView an [example Next.js](https://github.com/sst/sst/tree/dev/examples/aws-nextjs)\n app using SST in drop-in mode.\n\n* * *\n\n### [Monorepo](#monorepo)\n\nAlternatively, you might use SST in a monorepo. This is useful because most projects have a frontend, a backend, and some functions.\n\nIn this case, the `sst.config.ts` is still in the root but you can split it up into parts in the `infra/` directory.\n\n    my-sst-app├─ sst.config.ts├─ package.json├─ packages│  ├─ functions│  ├─ frontend│  ├─ backend│  └─ core└─ infra\n\nLearn more about our [monorepo setup](/docs/set-up-a-monorepo/)\n.\n\n* * *\n\n[CLI](#cli)\n\n------------\n\nTo make this all work, SST comes with a [CLI](/docs/reference/cli/)\n. You can install it as a part of your Node project.\n\nTerminal window\n\n    npm install sst\n\nOr if you are not using Node, you can install it globally.\n\nTerminal window\n\n    curl -fsSL https://sst.dev/install | bash\n\nNote\n\nSST currently supports **macOS, Linux, and WSL**. Support for Windows is on the roadmap.\n\nThe CLI currently supports macOS, Linux, and WSL. Learn more about the [CLI](/docs/reference/cli/)\n.\n\n* * *\n\n### [Dev](#dev)\n\nThe CLI includes a `dev` command that starts a local development environment.\n\nTerminal window\n\n    sst dev\n\nThis brings up a _multiplexer_ that:\n\n1.  Starts a watcher that deploys any infrastructure changes.\n2.  Runs your functions [_Live_](/docs/live/)\n    , letting you make and test changes without having to redeploy them.\n3.  Creates a [_tunnel_](/docs/reference/cli#tunnel)\n     to connect your local machine to any resources in a VPC.\n4.  Starts your frontend and container services in dev mode and links it to your infrastructure.\n\n[Watch a video about dev mode](https://youtu.be/mefLc137EB0)\n\nThe `sst dev` CLI makes it so that you won’t have to start your frontend or container applications separately. Learn more about [`sst dev`](/docs/reference/cli/#dev)\n.\n\n* * *\n\n### [Deploy](#deploy)\n\nWhen you’re ready to deploy your app, you can use the `deploy` command.\n\nTerminal window\n\n    sst deploy --stage production\n\n* * *\n\n#### [Stages](#stages)\n\nThe stage name is used to namespace different environments of your app. So you can create one for dev.\n\nTerminal window\n\n    sst deploy --stage dev\n\nOr for a pull request.\n\nTerminal window\n\n    sst deploy --stage pr-123\n\nLearn more about [stages](/docs/reference/cli#stage)\n.\n\n* * *\n\n[Console](#console)\n\n--------------------\n\nOnce you are ready to go to production, you can use the [SST Console](/docs/console/)\n to **auto-deploy** your app, create **preview environments**, and **monitor** for any issues.\n\n![SST Console](https://sst.dev/_astro/sst-console-home.-pMOaf_T_2f9BxE.webp)\n\nLearn more about the [Console](/docs/console/)\n.\n\n* * *\n\n[FAQ](#faq)\n\n------------\n\nHere are some questions that we frequently get.\n\n* * *\n\n**Is SST open-source if it’s based on Pulumi and Terraform?**\n\nSST uses Pulumi behind the scenes for the providers and the deployment engine. And Terraform’s providers are _bridged_ through Pulumi.\n\nSST only relies on the open-source parts of Pulumi and Terraform. It does not require a Pulumi account and all the data about your app and its resources stay on your side.\n\n* * *\n\n**How does SST compare to CDK for Terraform or Pulumi?**\n\nBoth CDKTF and Pulumi allow you to define your infrastructure using a programming language like TypeScript. SST is also built on top of Pulumi. So you might wonder how SST compares to them and why you would use SST instead of them.\n\nIn a nutshell, SST is for developers, while CDKTF and Pulumi are primarily for DevOps engineers. There are 3 big things SST does for developers:\n\n1.  Higher-level components\n    \n    SST’s built-in components like [`Nextjs`](/docs/component/aws/nextjs/)\n     or [`Email`](/docs/component/aws/email/)\n     make it easy for developers to add features to their app. You can use these without having to figure out how to work with the underlying Terraform resources.\n    \n2.  Linking resources\n    \n    SST makes it easy to link your infrastructure to your application and access them at runtime in your code.\n    \n3.  Dev mode\n    \n    Finally, SST features a unified local developer environment that deploys your app through a watcher, runs your functions [_Live_](/docs/live/)\n    , creates a [_tunnel_](/docs/reference/cli#tunnel)\n     to your VPC, starts your frontend and backend, all together.\n    \n\n* * *\n\n**How does SST make money?**\n\nWhile SST is open-source and free to use, we also have the [Console](/docs/console/)\n that can auto-deploy your apps and monitor for any issues. It’s optional and includes a free tier but it’s a SaaS service. It’s used by a large number of teams in our community, including ours.\n\n* * *\n\n#### [Next steps](#next-steps)\n\n1.  [Learn about the SST workflow](/docs/workflow/)\n    \n2.  Create your first SST app\n    *   [Build a Next.js app in AWS](/docs/start/aws/nextjs/)\n        \n    *   [Deploy Bun in a container to AWS](/docs/start/aws/bun/)\n        \n    *   [Build a Hono API with Cloudflare Workers](/docs/start/cloudflare/hono/)\n        \n\n[Edit this page](https://github.com/sst/sst/edit/dev/www/src/content/docs/docs/index.mdx)\n [Follow us on X.com](https://x.com/SST_dev)\n [Find a bug? Open an issue](https://github.com/sst/sst/issues/new)\n [Join our Discord community](https://sst.dev/discord)\n\nBuilt with [Astro & SST](https://github.com/sst/sst/tree/dev/www/sst.config.ts)\n\nLast updated — Feb 12, 2025\n\n© 2025 [Anomaly Innovations](https://anoma.ly)","markdown":"\n\n  [![](/_astro/logo-dark.DpZ7_bWK.svg) ![](/_astro/logo-light.BYAt7w5s.svg) SST](/)\n\n[Blog](/blog/)\n [Docs](/docs/)\n [Examples](/docs/examples/)\n\n[23K](https://github.com/sst/sst)\n\nAI Search CtrlK\n\nCancel\n\n[Console](https://console.sst.dev)\n\n*   [Intro](/docs)\n    \n*   [Workflow](/docs/workflow)\n    \n*   [Enterprise](/docs/enterprise)\n    \n*   Get Started\n    \n    *   [Bun](/docs/start/aws/bun)\n        \n    *   [Nuxt](/docs/start/aws/nuxt)\n        \n    *   [Solid](/docs/start/aws/solid)\n        \n    *   [Auth](/docs/start/aws/auth)\n        \n    *   [Deno](/docs/start/aws/deno)\n        \n    *   [tRPC](/docs/start/aws/trpc)\n        \n    *   [Hono](/docs/start/aws/hono)\n        \n    *   [Astro](/docs/start/aws/astro)\n        \n    *   [Email](/docs/start/aws/email)\n        \n    *   [Remix](/docs/start/aws/remix)\n        \n    *   [Svelte](/docs/start/aws/svelte)\n        \n    *   [Drizzle](/docs/start/aws/drizzle)\n        \n    *   [Prisma](/docs/start/aws/prisma)\n        \n    *   [Next.js](/docs/start/aws/nextjs)\n        \n    *   [Analog](/docs/start/aws/analog)\n        \n    *   [NestJS](/docs/start/aws/nestjs)\n        \n    *   [Angular](/docs/start/aws/angular)\n        \n    *   [Express](/docs/start/aws/express)\n        \n    *   [Realtime](/docs/start/aws/realtime)\n        \n    *   Cloudflare\n        \n        *   [tRPC](/docs/start/cloudflare/trpc)\n            \n        *   [Hono](/docs/start/cloudflare/hono)\n            \n        *   [Worker](/docs/start/cloudflare/worker)\n            \n        \n    \n*   Concepts\n    \n    *   [Live](/docs/live)\n        \n    *   [State](/docs/state)\n        \n    *   [Linking](/docs/linking)\n        \n    *   [Console](/docs/console)\n        \n    *   [Providers](/docs/providers)\n        \n    *   [Components](/docs/components)\n        \n    \n*   How to\n    \n    *   [AWS Accounts](/docs/aws-accounts)\n        \n    *   [IAM Credentials](/docs/iam-credentials)\n        \n    *   [Migrate From v2](/docs/migrate-from-v2)\n        \n    *   [Custom Domains](/docs/custom-domains)\n        \n    *   [Import Resources](/docs/import-resources)\n        \n    *   [Set up a Monorepo](/docs/set-up-a-monorepo)\n        \n    *   [Share Across Stages](/docs/share-across-stages)\n        \n    *   [Reference Resources](/docs/reference-resources)\n        \n    *   [Environment Variables](/docs/environment-variables)\n        \n    \n*   Components\n    \n    *   AWS\n        \n        *   [Efs](/docs/component/aws/efs)\n            \n        *   [Bus](/docs/component/aws/bus)\n            \n        *   [Vpc](/docs/component/aws/vpc)\n            \n        *   [Task](/docs/component/aws/task)\n            \n        *   [Cron](/docs/component/aws/cron)\n            \n        *   [Auth](/docs/component/aws/auth)\n            \n        *   [Nuxt](/docs/component/aws/nuxt)\n            \n        *   [Astro](/docs/component/aws/astro)\n            \n        *   [Redis](/docs/component/aws/redis)\n            \n        *   [Email](/docs/component/aws/email)\n            \n        *   [React](/docs/component/aws/react)\n            \n        *   [Remix](/docs/component/aws/remix)\n            \n        *   [Nextjs](/docs/component/aws/nextjs)\n            \n        *   [Queue](/docs/component/aws/queue)\n            \n        *   [Vector](/docs/component/aws/vector)\n            \n        *   [Aurora](/docs/component/aws/aurora)\n            \n        *   [Router](/docs/component/aws/router)\n            \n        *   [Analog](/docs/component/aws/analog)\n            \n        *   [Bucket](/docs/component/aws/bucket)\n            \n        *   [Cluster](/docs/component/aws/cluster)\n            \n        *   [Service](/docs/component/aws/service)\n            \n        *   [Dynamo](/docs/component/aws/dynamo)\n            \n        *   [Realtime](/docs/component/aws/realtime)\n            \n        *   [SnsTopic](/docs/component/aws/sns-topic)\n            \n        *   [Function](/docs/component/aws/function)\n            \n        *   [Postgres](/docs/component/aws/postgres)\n            \n        *   [AppSync](/docs/component/aws/app-sync)\n            \n        *   [SvelteKit](/docs/component/aws/svelte-kit)\n            \n        *   [StaticSite](/docs/component/aws/static-site)\n            \n        *   [SolidStart](/docs/component/aws/solid-start)\n            \n        *   [OpenControl](/docs/component/aws/opencontrol)\n            \n        *   [TanStackStart](/docs/component/aws/tan-stack-start)\n            \n        *   [KinesisStream](/docs/component/aws/kinesis-stream)\n            \n        *   [ApiGatewayV1](/docs/component/aws/apigatewayv1)\n            \n        *   [ApiGatewayV2](/docs/component/aws/apigatewayv2)\n            \n        *   [CognitoUserPool](/docs/component/aws/cognito-user-pool)\n            \n        *   [CognitoIdentityPool](/docs/component/aws/cognito-identity-pool)\n            \n        *   [ApiGatewayWebSocket](/docs/component/aws/apigateway-websocket)\n            \n        *   Internal\n            \n            *   [Cdn](/docs/component/aws/cdn)\n                \n            *   [AppSyncResolver](/docs/component/aws/app-sync-resolver)\n                \n            *   [AppSyncFunction](/docs/component/aws/app-sync-function)\n                \n            *   [BucketNotification](/docs/component/aws/bucket-notification)\n                \n            *   [AppSyncDataSource](/docs/component/aws/app-sync-data-source)\n                \n            *   [ApiGatewayV1ApiKey](/docs/component/aws/apigatewayv1-api-key)\n                \n            *   [BusQueueSubscriber](/docs/component/aws/bus-queue-subscriber)\n                \n            *   [CognitoUserPoolClient](/docs/component/aws/cognito-user-pool-client)\n                \n            *   [BusLambdaSubscriber](/docs/component/aws/bus-lambda-subscriber)\n                \n            *   [ApiGatewayV2UrlRoute](/docs/component/aws/apigatewayv2-url-route)\n                \n            *   [ApiGatewayV1Authorizer](/docs/component/aws/apigatewayv1-authorizer)\n                \n            *   [ApiGatewayV1UsagePlan](/docs/component/aws/apigatewayv1-usage-plan)\n                \n            *   [ApiGatewayV2Authorizer](/docs/component/aws/apigatewayv2-authorizer)\n                \n            *   [QueueLambdaSubscriber](/docs/component/aws/queue-lambda-subscriber)\n                \n            *   [SnsTopicQueueSubscriber](/docs/component/aws/sns-topic-queue-subscriber)\n                \n            *   [DynamoLambdaSubscriber](/docs/component/aws/dynamo-lambda-subscriber)\n                \n            *   [RealtimeLambdaSubscriber](/docs/component/aws/realtime-lambda-subscriber)\n                \n            *   [SnsTopicLambdaSubscriber](/docs/component/aws/sns-topic-lambda-subscriber)\n                \n            *   [ApiGatewayV1LambdaRoute](/docs/component/aws/apigatewayv1-lambda-route)\n                \n            *   [ApiGatewayV2LambdaRoute](/docs/component/aws/apigatewayv2-lambda-route)\n                \n            *   [ApiGatewayWebSocketRoute](/docs/component/aws/apigateway-websocket-route)\n                \n            *   [ApiGatewayV1IntegrationRoute](/docs/component/aws/apigatewayv1-integration-route)\n                \n            *   [KinesisStreamLambdaSubscriber](/docs/component/aws/kinesis-stream-lambda-subscriber)\n                \n            \n        *   Deprecated\n            \n            *   [Vpc.v1](/docs/component/aws/vpc-v1)\n                \n            *   [Cluster.v1](/docs/component/aws/cluster-v1)\n                \n            *   [Postgres.v1](/docs/component/aws/postgres-v1)\n                \n            \n        \n    *   Cloudflare\n        \n        *   [Kv](/docs/component/cloudflare/kv)\n            \n        *   [D1](/docs/component/cloudflare/d1)\n            \n        *   [Worker](/docs/component/cloudflare/worker)\n            \n        *   [Bucket](/docs/component/cloudflare/bucket)\n            \n        \n    *   Internal\n        \n        *   Dns\n            \n            *   [AWS](/docs/component/aws/dns)\n                \n            *   [Vercel](/docs/component/vercel/dns)\n                \n            *   [Cloudflare](/docs/component/cloudflare/dns)\n                \n            \n        *   Linkable\n            \n            *   [binding](/docs/component/cloudflare/binding)\n                \n            *   [permission](/docs/component/aws/permission)\n                \n            \n        \n    *   [All Providers](/docs/all-providers)\n        \n    \n*   Reference\n    \n    *   [CLI](/docs/reference/cli)\n        \n    *   [SDK](/docs/reference/sdk)\n        \n    *   [Global](/docs/reference/global)\n        \n    *   [Config](/docs/reference/config)\n        \n    *   [Secret](/docs/component/secret)\n        \n    *   [Linkable](/docs/component/linkable)\n        \n    *   [DevCommand](/docs/component/experimental/dev-command)\n        \n    \n*   [Examples](/docs/examples)\n    \n*   [Common Errors](/docs/common-errors)\n    \n\n[Blog](/blog/)\n [Docs](/docs/)\n [Examples](/docs/examples/)\n\n[X](https://x.com/SST_dev)\n [Discord](https://sst.dev/discord)\n [GitHub](https://github.com/sst/sst)\n\nOn this page\n\n*   [Overview](#_top)\n    \n*   [Components](#components)\n    \n*   [Infrastructure](#infrastructure)\n    *   [Configure](#configure)\n        \n    *   [Providers](#providers)\n        \n*   [Link resources](#link-resources)\n    \n*   [Project structure](#project-structure)\n    *   [Drop-in mode](#drop-in-mode)\n        \n    *   [Monorepo](#monorepo)\n        \n*   [CLI](#cli)\n    *   [Dev](#dev)\n        \n    *   [Deploy](#deploy)\n        \n*   [Console](#console)\n    \n*   [FAQ](#faq)\n    \n\nOn this page\n------------\n\n*   [Overview](#_top)\n    \n*   [Components](#components)\n    \n*   [Infrastructure](#infrastructure)\n    *   [Configure](#configure)\n        \n    *   [Providers](#providers)\n        \n*   [Link resources](#link-resources)\n    \n*   [Project structure](#project-structure)\n    *   [Drop-in mode](#drop-in-mode)\n        \n    *   [Monorepo](#monorepo)\n        \n*   [CLI](#cli)\n    *   [Dev](#dev)\n        \n    *   [Deploy](#deploy)\n        \n*   [Console](#console)\n    \n*   [FAQ](#faq)\n    \n\nWhat is SST\n===========\n\nBuild full-stack apps on your own infrastructure.\n\nSST is a framework that makes it easy to build modern full-stack applications on your own infrastructure.\n\nNote\n\nSST supports over 150 providers. Check out the [full list](/docs/all-providers#directory)\n.\n\nWhat makes SST different is that your _entire_ app is **defined in code** — in a single `sst.config.ts` file. This includes databases, buckets, queues, Stripe webhooks, or any one of **150+ providers**.\n\nWith SST, **everything is automated**.\n\n* * *\n\n[Components](#components)\n\n--------------------------\n\nYou start by defining parts of your app, _**in code**_.\n\nFor example, you can add your frontend and set the domain you want to use.\n\n*   [Next.js](#tab-panel-8)\n    \n*   [Remix](#tab-panel-9)\n    \n*   [Astro](#tab-panel-10)\n    \n*   [Svelte](#tab-panel-11)\n    \n*   [Solid](#tab-panel-12)\n    \n\nsst.config.ts\n\n    new sst.aws.Nextjs(\"MyWeb\", {  domain: \"my-app.com\"});\n\nsst.config.ts\n\n    new sst.aws.Remix(\"MyWeb\", {  domain: \"my-app.com\"});\n\nsst.config.ts\n\n    new sst.aws.Astro(\"MyWeb\", {  domain: \"my-app.com\"});\n\nsst.config.ts\n\n    new sst.aws.SvelteKit(\"MyWeb\", {  domain: \"my-app.com\"});\n\nsst.config.ts\n\n    new sst.aws.SolidStart(\"MyWeb\", {  domain: \"my-app.com\"});\n\nJust like the frontend, you can configure backend features _in code_.\n\nLike your API deployed in a container. Or any Lambda functions, Postgres databases, S3 Buckets, or cron jobs.\n\n*   [Containers](#tab-panel-13)\n    \n*   [Functions](#tab-panel-14)\n    \n*   [Postgres](#tab-panel-15)\n    \n*   [Bucket](#tab-panel-16)\n    \n*   [Cron](#tab-panel-17)\n    \n\nsst.config.ts\n\n    const cluster = new sst.aws.Cluster(\"MyCluster\", { vpc });\n    new sst.aws.Service(\"MyService\", {  cluster,  loadBalancer: {    ports: [{ listen: \"80/http\" }]  }});\n\nsst.config.ts\n\n    new sst.aws.Function(\"MyFunction\", {  handler: \"src/lambda.handler\"});\n\nsst.config.ts\n\n    new sst.aws.Postgres(\"MyDatabase\", { vpc });\n\nsst.config.ts\n\n    new sst.aws.Bucket(\"MyBucket\");\n\nsst.config.ts\n\n    new sst.aws.Cron(\"MyCronJob\", {  job: \"src/cron.handler\",  schedule: \"rate(1 minute)\"});\n\nYou can even set up your Stripe products in code.\n\nsst.config.ts\n\n    new stripe.Product(\"MyStripeProduct\", {  name: \"SST Paid Plan\",  description: \"This is how SST makes money\",});\n\nYou can check out the full list of components in the sidebar.\n\n* * *\n\n[Infrastructure](#infrastructure)\n\n----------------------------------\n\nThe above are called **Components**. They are a way of defining the features of your application in code. You can define any feature of your application with them.\n\nIn the above examples, they create the necessary infrastructure in your AWS account. All without using the AWS Console.\n\nLearn more about [Components](/docs/components/)\n.\n\n* * *\n\n### [Configure](#configure)\n\nSST’s components come with sensible defaults designed to get you started. But they can also be configured completely.\n\nFor example, the `sst.aws.Function` can be configured with all the common Lambda function options.\n\nsst.config.ts\n\n    new sst.aws.Function(\"MyFunction\", {  handler: \"src/lambda.handler\",  timeout: \"3 minutes\",  memory: \"1024 MB\"});\n\nBut with SST you can take it a step further and transform how the Function component creates its low level resources. For example, the Function component also creates an IAM Role. You can transform the IAM Role using the `transform` prop.\n\nsst.config.ts\n\n    new sst.aws.Function(\"MyFunction\", {  handler: \"src/lambda.handler\",  transform: {    role: (args) => ({      name: `${args.name}-MyRole`    })  }});\n\nLearn more about [transforms](/docs/components#transforms)\n.\n\n* * *\n\n### [Providers](#providers)\n\nSST has built-in components for AWS and Cloudflare that make these services easier to use.\n\n[Watch a video about providers in SST](https://youtu.be/rlR2f5N9mW4)\n\nHowever it also supports components from any one of the **150+ Pulumi/Terraform providers**. For example, you can use Vercel for your frontends.\n\nsst.config.ts\n\n    new vercel.Project(\"MyFrontend\", {  name: \"my-nextjs-app\"});\n\nLearn more about [Providers](/docs/providers)\n and check out the full list in the [Directory](/docs/all-providers#directory)\n.\n\n* * *\n\n[Link resources](#link-resources)\n\n----------------------------------\n\nOnce you’ve added a couple of features, SST can help you link them together. This is great because you **won’t need to hardcode** anything in your app.\n\n[Watch a video on linking resources](https://youtu.be/s8cWklU4Akw)\n\nLet’s say you are deploying an Express app in a container and you want to upload files to an S3 bucket. You can `link` the bucket to your container.\n\nsst.config.ts\n\n    const bucket = new sst.aws.Bucket(\"MyBucket\");\n    const cluster = new sst.aws.Cluster(\"MyCluster\", { vpc });\n    new sst.aws.Service(\"MyService\", {  cluster,  link: [bucket],  loadBalancer: {    ports: [{ listen: \"80/http\" }]  }});\n\nYou can then use SST’s [SDK](/docs/reference/sdk/)\n to access the S3 bucket in your Express app.\n\nindex.mjs\n\n    import { Resource } from \"sst\";\n    console.log(Resource.MyBucket.name);\n\nLearn more about [resource linking](/docs/linking/)\n.\n\n* * *\n\n[Project structure](#project-structure)\n\n----------------------------------------\n\nWe’ve looked at a couple of different types of files. Let’s take a step back and see what an SST app looks like in practice.\n\n[Watch a video about SST's project structure](https://youtu.be/mserRA-CWRw)\n\n* * *\n\n### [Drop-in mode](#drop-in-mode)\n\nThe simplest way to run SST is to use it as a part of your app. This is called _drop-in mode_. For example, if you are building a Next.js app, you can add a `sst.config.ts` file to the root.\n\n    my-nextjs-app├─ next.config.js├─ sst.config.ts├─ package.json├─ app├─ lib└─ public\n\nView an [example Next.js](https://github.com/sst/sst/tree/dev/examples/aws-nextjs)\n app using SST in drop-in mode.\n\n* * *\n\n### [Monorepo](#monorepo)\n\nAlternatively, you might use SST in a monorepo. This is useful because most projects have a frontend, a backend, and some functions.\n\nIn this case, the `sst.config.ts` is still in the root but you can split it up into parts in the `infra/` directory.\n\n    my-sst-app├─ sst.config.ts├─ package.json├─ packages│  ├─ functions│  ├─ frontend│  ├─ backend│  └─ core└─ infra\n\nLearn more about our [monorepo setup](/docs/set-up-a-monorepo/)\n.\n\n* * *\n\n[CLI](#cli)\n\n------------\n\nTo make this all work, SST comes with a [CLI](/docs/reference/cli/)\n. You can install it as a part of your Node project.\n\nTerminal window\n\n    npm install sst\n\nOr if you are not using Node, you can install it globally.\n\nTerminal window\n\n    curl -fsSL https://sst.dev/install | bash\n\nNote\n\nSST currently supports **macOS, Linux, and WSL**. Support for Windows is on the roadmap.\n\nThe CLI currently supports macOS, Linux, and WSL. Learn more about the [CLI](/docs/reference/cli/)\n.\n\n* * *\n\n### [Dev](#dev)\n\nThe CLI includes a `dev` command that starts a local development environment.\n\nTerminal window\n\n    sst dev\n\nThis brings up a _multiplexer_ that:\n\n1.  Starts a watcher that deploys any infrastructure changes.\n2.  Runs your functions [_Live_](/docs/live/)\n    , letting you make and test changes without having to redeploy them.\n3.  Creates a [_tunnel_](/docs/reference/cli#tunnel)\n     to connect your local machine to any resources in a VPC.\n4.  Starts your frontend and container services in dev mode and links it to your infrastructure.\n\n[Watch a video about dev mode](https://youtu.be/mefLc137EB0)\n\nThe `sst dev` CLI makes it so that you won’t have to start your frontend or container applications separately. Learn more about [`sst dev`](/docs/reference/cli/#dev)\n.\n\n* * *\n\n### [Deploy](#deploy)\n\nWhen you’re ready to deploy your app, you can use the `deploy` command.\n\nTerminal window\n\n    sst deploy --stage production\n\n* * *\n\n#### [Stages](#stages)\n\nThe stage name is used to namespace different environments of your app. So you can create one for dev.\n\nTerminal window\n\n    sst deploy --stage dev\n\nOr for a pull request.\n\nTerminal window\n\n    sst deploy --stage pr-123\n\nLearn more about [stages](/docs/reference/cli#stage)\n.\n\n* * *\n\n[Console](#console)\n\n--------------------\n\nOnce you are ready to go to production, you can use the [SST Console](/docs/console/)\n to **auto-deploy** your app, create **preview environments**, and **monitor** for any issues.\n\n![SST Console](/_astro/sst-console-home.-pMOaf_T_2f9BxE.webp)\n\nLearn more about the [Console](/docs/console/)\n.\n\n* * *\n\n[FAQ](#faq)\n\n------------\n\nHere are some questions that we frequently get.\n\n* * *\n\n**Is SST open-source if it’s based on Pulumi and Terraform?**\n\nSST uses Pulumi behind the scenes for the providers and the deployment engine. And Terraform’s providers are _bridged_ through Pulumi.\n\nSST only relies on the open-source parts of Pulumi and Terraform. It does not require a Pulumi account and all the data about your app and its resources stay on your side.\n\n* * *\n\n**How does SST compare to CDK for Terraform or Pulumi?**\n\nBoth CDKTF and Pulumi allow you to define your infrastructure using a programming language like TypeScript. SST is also built on top of Pulumi. So you might wonder how SST compares to them and why you would use SST instead of them.\n\nIn a nutshell, SST is for developers, while CDKTF and Pulumi are primarily for DevOps engineers. There are 3 big things SST does for developers:\n\n1.  Higher-level components\n    \n    SST’s built-in components like [`Nextjs`](/docs/component/aws/nextjs/)\n     or [`Email`](/docs/component/aws/email/)\n     make it easy for developers to add features to their app. You can use these without having to figure out how to work with the underlying Terraform resources.\n    \n2.  Linking resources\n    \n    SST makes it easy to link your infrastructure to your application and access them at runtime in your code.\n    \n3.  Dev mode\n    \n    Finally, SST features a unified local developer environment that deploys your app through a watcher, runs your functions [_Live_](/docs/live/)\n    , creates a [_tunnel_](/docs/reference/cli#tunnel)\n     to your VPC, starts your frontend and backend, all together.\n    \n\n* * *\n\n**How does SST make money?**\n\nWhile SST is open-source and free to use, we also have the [Console](/docs/console/)\n that can auto-deploy your apps and monitor for any issues. It’s optional and includes a free tier but it’s a SaaS service. It’s used by a large number of teams in our community, including ours.\n\n* * *\n\n#### [Next steps](#next-steps)\n\n1.  [Learn about the SST workflow](/docs/workflow/)\n    \n2.  Create your first SST app\n    *   [Build a Next.js app in AWS](/docs/start/aws/nextjs/)\n        \n    *   [Deploy Bun in a container to AWS](/docs/start/aws/bun/)\n        \n    *   [Build a Hono API with Cloudflare Workers](/docs/start/cloudflare/hono/)\n        \n\n[Edit this page](https://github.com/sst/sst/edit/dev/www/src/content/docs/docs/index.mdx)\n [Follow us on X.com](https://x.com/SST_dev)\n [Find a bug? Open an issue](https://github.com/sst/sst/issues/new)\n [Join our Discord community](https://sst.dev/discord)\n\nBuilt with [Astro & SST](https://github.com/sst/sst/tree/dev/www/sst.config.ts)\n\nLast updated — Feb 12, 2025\n\n© 2025 [Anomaly Innovations](https://anoma.ly)","metadata":{"title":"What is SST | SST","description":"Build full-stack apps on your own infrastructure.","ogTitle":"What is SST","ogDescription":"Build full-stack apps on your own infrastructure.","ogUrl":"https://sst.dev/docs/","ogImage":"https://social-cards.sst.dev/v3-docs/V2hhdCUyMGlzJTIwU1NU.png","ogLocale":"en","ogLocaleAlternate":[],"ogSiteName":"SST","sourceURL":"https://sst.dev/docs"},"childrenLinks":["https://sst.dev/docs","https://sst.dev/docs/","https://sst.dev/docs/examples/","https://sst.dev/docs/workflow","https://sst.dev/docs/enterprise","https://sst.dev/docs/start/aws/bun","https://sst.dev/docs/start/aws/nuxt","https://sst.dev/docs/start/aws/solid","https://sst.dev/docs/start/aws/auth","https://sst.dev/docs/start/aws/deno","https://sst.dev/docs/start/aws/trpc","https://sst.dev/docs/start/aws/hono","https://sst.dev/docs/start/aws/astro","https://sst.dev/docs/start/aws/email","https://sst.dev/docs/start/aws/remix","https://sst.dev/docs/start/aws/svelte","https://sst.dev/docs/start/aws/drizzle","https://sst.dev/docs/start/aws/prisma","https://sst.dev/docs/start/aws/nextjs","https://sst.dev/docs/start/aws/analog","https://sst.dev/docs/start/aws/nestjs","https://sst.dev/docs/start/aws/angular","https://sst.dev/docs/start/aws/express","https://sst.dev/docs/start/aws/realtime","https://sst.dev/docs/start/cloudflare/trpc","https://sst.dev/docs/start/cloudflare/hono","https://sst.dev/docs/start/cloudflare/worker","https://sst.dev/docs/live","https://sst.dev/docs/state","https://sst.dev/docs/linking","https://sst.dev/docs/console","https://sst.dev/docs/providers","https://sst.dev/docs/components","https://sst.dev/docs/aws-accounts","https://sst.dev/docs/iam-credentials","https://sst.dev/docs/migrate-from-v2","https://sst.dev/docs/custom-domains","https://sst.dev/docs/import-resources","https://sst.dev/docs/set-up-a-monorepo","https://sst.dev/docs/share-across-stages","https://sst.dev/docs/reference-resources","https://sst.dev/docs/environment-variables","https://sst.dev/docs/component/aws/efs","https://sst.dev/docs/component/aws/bus","https://sst.dev/docs/component/aws/vpc","https://sst.dev/docs/component/aws/task","https://sst.dev/docs/component/aws/cron","https://sst.dev/docs/component/aws/auth","https://sst.dev/docs/component/aws/nuxt","https://sst.dev/docs/component/aws/astro","https://sst.dev/docs/component/aws/redis","https://sst.dev/docs/component/aws/email","https://sst.dev/docs/component/aws/react","https://sst.dev/docs/component/aws/remix","https://sst.dev/docs/component/aws/nextjs","https://sst.dev/docs/component/aws/queue","https://sst.dev/docs/component/aws/vector","https://sst.dev/docs/component/aws/aurora","https://sst.dev/docs/component/aws/router","https://sst.dev/docs/component/aws/analog","https://sst.dev/docs/component/aws/bucket","https://sst.dev/docs/component/aws/cluster","https://sst.dev/docs/component/aws/service","https://sst.dev/docs/component/aws/dynamo","https://sst.dev/docs/component/aws/realtime","https://sst.dev/docs/component/aws/sns-topic","https://sst.dev/docs/component/aws/function","https://sst.dev/docs/component/aws/postgres","https://sst.dev/docs/component/aws/app-sync","https://sst.dev/docs/component/aws/svelte-kit","https://sst.dev/docs/component/aws/static-site","https://sst.dev/docs/component/aws/solid-start","https://sst.dev/docs/component/aws/opencontrol","https://sst.dev/docs/component/aws/tan-stack-start","https://sst.dev/docs/component/aws/kinesis-stream","https://sst.dev/docs/component/aws/apigatewayv1","https://sst.dev/docs/component/aws/apigatewayv2","https://sst.dev/docs/component/aws/cognito-user-pool","https://sst.dev/docs/component/aws/cognito-identity-pool","https://sst.dev/docs/component/aws/apigateway-websocket","https://sst.dev/docs/component/aws/cdn","https://sst.dev/docs/component/aws/app-sync-resolver","https://sst.dev/docs/component/aws/app-sync-function","https://sst.dev/docs/component/aws/bucket-notification","https://sst.dev/docs/component/aws/app-sync-data-source","https://sst.dev/docs/component/aws/apigatewayv1-api-key","https://sst.dev/docs/component/aws/bus-queue-subscriber","https://sst.dev/docs/component/aws/cognito-user-pool-client","https://sst.dev/docs/component/aws/bus-lambda-subscriber","https://sst.dev/docs/component/aws/apigatewayv2-url-route","https://sst.dev/docs/component/aws/apigatewayv1-authorizer","https://sst.dev/docs/component/aws/apigatewayv1-usage-plan","https://sst.dev/docs/component/aws/apigatewayv2-authorizer","https://sst.dev/docs/component/aws/queue-lambda-subscriber","https://sst.dev/docs/component/aws/sns-topic-queue-subscriber","https://sst.dev/docs/component/aws/dynamo-lambda-subscriber","https://sst.dev/docs/component/aws/realtime-lambda-subscriber","https://sst.dev/docs/component/aws/sns-topic-lambda-subscriber","https://sst.dev/docs/component/aws/apigatewayv1-lambda-route","https://sst.dev/docs/component/aws/apigatewayv2-lambda-route","https://sst.dev/docs/component/aws/apigateway-websocket-route","https://sst.dev/docs/component/aws/apigatewayv1-integration-route","https://sst.dev/docs/component/aws/kinesis-stream-lambda-subscriber","https://sst.dev/docs/component/aws/vpc-v1","https://sst.dev/docs/component/aws/cluster-v1","https://sst.dev/docs/component/aws/postgres-v1","https://sst.dev/docs/component/cloudflare/kv","https://sst.dev/docs/component/cloudflare/d1","https://sst.dev/docs/component/cloudflare/worker","https://sst.dev/docs/component/cloudflare/bucket","https://sst.dev/docs/component/aws/dns","https://sst.dev/docs/component/vercel/dns","https://sst.dev/docs/component/cloudflare/dns","https://sst.dev/docs/component/cloudflare/binding","https://sst.dev/docs/component/aws/permission","https://sst.dev/docs/all-providers","https://sst.dev/docs/reference/cli","https://sst.dev/docs/reference/sdk","https://sst.dev/docs/reference/global","https://sst.dev/docs/reference/config","https://sst.dev/docs/component/secret","https://sst.dev/docs/component/linkable","https://sst.dev/docs/component/experimental/dev-command","https://sst.dev/docs/examples","https://sst.dev/docs/common-errors","https://sst.dev/docs/components/","https://sst.dev/docs/reference/sdk/","https://sst.dev/docs/linking/","https://sst.dev/docs/set-up-a-monorepo/","https://sst.dev/docs/reference/cli/","https://sst.dev/docs/live/","https://sst.dev/docs/console/","https://sst.dev/docs/component/aws/nextjs/","https://sst.dev/docs/component/aws/email/","https://sst.dev/docs/workflow/","https://sst.dev/docs/start/aws/nextjs/","https://sst.dev/docs/start/aws/bun/","https://sst.dev/docs/start/cloudflare/hono/","https://sst.dev/docs/iam-credentials/","https://sst.dev/docs/import-resources/","https://sst.dev/docs/reference-resources/","https://sst.dev/docs/share-across-stages/","https://sst.dev/docs/state/","https://sst.dev/docs/component/aws/realtime/","https://sst.dev/docs/component/aws/vpc/","https://sst.dev/docs/reference/config/","https://sst.dev/docs/component/aws/bucket/","https://sst.dev/docs/component/aws/postgres/","https://sst.dev/docs/component/aws/cognito-user-pool/","https://sst.dev/docs/component/aws/cognito-identity-pool/","https://sst.dev/docs/component/linkable/","https://sst.dev/docs/component/aws/dns/","https://sst.dev/docs/component/vercel/dns/","https://sst.dev/docs/component/cloudflare/dns/","https://sst.dev/docs/providers/","https://sst.dev/docs/component/aws/function/","https://sst.dev/docs/component/aws/task/","https://sst.dev/docs/component/aws/queue-lambda-subscriber/","https://sst.dev/docs/component/aws/realtime-lambda-subscriber/","https://sst.dev/docs/component/aws/kinesis-stream-lambda-subscriber/","https://sst.dev/docs/component/aws/router/","https://sst.dev/docs/component/aws/dynamo/","https://sst.dev/docs/component/aws/bucket-notification/","https://sst.dev/docs/component/aws/queue/","https://sst.dev/docs/component/aws/sns-topic/","https://sst.dev/docs/component/aws/dynamo-lambda-subscriber/","https://sst.dev/docs/component/aws/bus-lambda-subscriber/","https://sst.dev/docs/component/aws/bus-queue-subscriber/","https://sst.dev/docs/component/aws/permission/","https://sst.dev/docs/component/cloudflare/binding/","https://sst.dev/docs/component/aws/apigatewayv1-api-key/","https://sst.dev/docs/component/aws/cdn/","https://sst.dev/docs/component/aws/cognito-user-pool-client/","https://sst.dev/docs/component/aws/cognito-identity-provider/","https://sst.dev/docs/component/aws/cluster/","https://sst.dev/docs/component/aws/efs/","https://sst.dev/docs/component/aws/sns-topic-lambda-subscriber/","https://sst.dev/docs/component/aws/sns-topic-queue-subscriber/","https://sst.dev/docs/start/aws/drizzle/","https://sst.dev/docs/component/aws/app-sync-data-source/","https://sst.dev/docs/component/aws/app-sync-function/","https://sst.dev/docs/component/aws/app-sync-resolver/","https://sst.dev/docs/component/aws/static-site/","https://sst.dev/docs/component/aws/apigatewayv2-authorizer/","https://sst.dev/docs/component/aws/apigateway-websocket-route/","https://sst.dev/docs/component/aws/service/","https://sst.dev/docs/component/aws/apigatewayv2-lambda-route/","https://sst.dev/docs/component/aws/apigatewayv2-private-route/","https://sst.dev/docs/component/aws/apigatewayv2-url-route/","https://sst.dev/docs/component/aws/apigatewayv1-authorizer/","https://sst.dev/docs/component/aws/apigatewayv1-usage-plan/","https://sst.dev/docs/component/aws/apigatewayv1-lambda-route/","https://sst.dev/docs/component/aws/apigatewayv1-integration-route/","https://sst.dev/docs/reference/global/","https://sst.dev/docs/component/secret/","https://sst.dev/docs/component/aws/apigatewayv2/"]}
