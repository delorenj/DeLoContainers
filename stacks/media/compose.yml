services:
  gluetun:
    image: qmcgaw/gluetun
    container_name: gluetun
    cap_add:
      - NET_ADMIN
    networks:
      - proxy
    environment:
      - VPN_SERVICE_PROVIDER=custom
      - OPENVPN_USER=${VPNAC_USER}
      - OPENVPN_PASSWORD=${VPNAC_PASSWORD}
      - OPENVPN_CUSTOM_CONFIG=/gluetun/netherlands.ovpn
      - TZ=${TZ}
      - FIREWALL_VPN_INPUT_PORTS=49152,49153,49154,49155,49156
    volumes:
      - ./gluetun:/gluetun
    ports:
      - 49152:49152/tcp
      - 49152:49152/udp
      - 49153:49153/tcp
      - 49153:49153/udp
      - 49154:49154/tcp
      - 49154:49154/udp
      - 49155:49155/tcp
      - 49155:49155/udp
      - 49156:49156/tcp
      - 49156:49156/udp
    restart: unless-stopped
  vpn-monitor:
      image: alpine:latest
      container_name: vpn-monitor
      command: |
        sh -c '
        apk add --no-cache iproute2
        while true; do
          if ip addr show tun0 up > /dev/null 2>&1; then
            echo "vpn_connected 1" > /metrics
          else
            echo "vpn_connected 0" > /metrics
          fi
          sleep 30
        done'
      volumes:
        - /sys/class/net:/sys/class/net:ro
      networks:
        - proxy
  qbittorrent:
    image: linuxserver/qbittorrent:latest
    container_name: qbittorrent
    depends_on:
      - gluetun
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - WEBUI_PORT=8090
    volumes:
      - ./qbittorrent:/config
      - ${DOWNLOAD_PATH}:/downloads
      - ${VIDEO_PATH}:/video
    network_mode: "service:gluetun"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.get.entrypoints=websecure"
      - "traefik.http.routers.get.rule=Host(`get.delo.sh`) || Host(`get.delorenzo.family`)"
      - "traefik.http.routers.get.tls=true"
      - "traefik.http.routers.get.tls.certresolver=letsencrypt"
      - "traefik.http.services.get.loadbalancer.server.port=8090"
    restart: unless-stopped
  exportarr:
    image: ghcr.io/onedr0p/exportarr:latest
    container_name: prowlarr-exportarr
    command: ["prowlarr"]
    environment:
      - PORT=9707  # metric port
      - URL=https://index.delo.sh # URL of prowlarr
      - APIKEY=${PROWLARR_API_KEY} # Add this to your .env
    networks:
      - proxy
    ports:
     - "9710:9710"      
    restart: unless-stopped
  prowlarr:
    image: linuxserver/prowlarr:latest
    container_name: prowlarr
    depends_on:
      - gluetun
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./prowlarr:/config
    network_mode: "service:gluetun"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.index.entrypoints=websecure"
      - "traefik.http.routers.index.rule=Host(`index.delo.sh`) || Host(`index.delorenzo.family`)"
      - "traefik.http.routers.index.tls=true"
      - "traefik.http.routers.index.tls.certresolver=letsencrypt"
      - "traefik.http.services.index.loadbalancer.server.port=9696"
    restart: unless-stopped

  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    depends_on:
      - gluetun
    environment:
      - LOG_LEVEL=info
      - LOG_HTML=false
      - CAPTCHA_SOLVER=none
      - HEADLESS=true
      - TZ=${TZ}
    network_mode: "service:gluetun"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.flaresolverr.entrypoints=websecure"
      - "traefik.http.routers.flaresolverr.rule=Host(`flaresolverr.delo.sh`) || Host(`flaresolverr.delorenzo.family`)"
      - "traefik.http.routers.flaresolverr.tls=true"
      - "traefik.http.routers.flaresolverr.tls.certresolver=letsencrypt"
      - "traefik.http.services.flaresolverr.loadbalancer.server.port=8191"
    restart: unless-stopped

  radarr:
    image: linuxserver/radarr:latest
    container_name: radarr
    depends_on:
      - gluetun
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./radarr:/config
      - ${DOWNLOAD_PATH}:/downloads
      - ${VIDEO_PATH}:/video
    network_mode: "service:gluetun"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.movies.entrypoints=websecure"
      - "traefik.http.routers.movies.rule=Host(`movies.delo.sh`) || Host(`movies.delorenzo.family`)"
      - "traefik.http.routers.movies.tls=true"
      - "traefik.http.routers.movies.tls.certresolver=letsencrypt"
      - "traefik.http.services.movies.loadbalancer.server.port=7878"
    restart: unless-stopped

  jellyfin:
    image: linuxserver/jellyfin:latest
    container_name: jellyfin
    depends_on:
      - gluetun
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./jellyfin:/config
      - ${VIDEO_PATH}:/media
    network_mode: "service:gluetun"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jelly.entrypoints=websecure"
      - "traefik.http.routers.jelly.rule=Host(`jelly.delo.sh`) || Host(`jelly.delorenzo.family`)"
      - "traefik.http.routers.jelly.tls=true"
      - "traefik.http.routers.jelly.tls.certresolver=letsencrypt"
      - "traefik.http.services.jelly.loadbalancer.server.port=8096"
    restart: unless-stopped
