services:
  gluetun:
    image: qmcgaw/gluetun
    container_name: gluetun
    restart: always
    cap_add:
      - NET_ADMIN
    environment:
      - VPN_SERVICE_PROVIDER=custom
      - OPENVPN_USER=${VPNAC_USER}
      - OPENVPN_PASSWORD=${VPNAC_PASSWORD}
      - OPENVPN_CUSTOM_CONFIG=/gluetun/netherlands.ovpn
      - FIREWALL_VPN_INPUT_PORTS=49152,49153,49154,49155,49156
      - DNS_SERVERS=1.1.1.1,8.8.8.8,1.0.0.1
    volumes:
      - ./gluetun:/gluetun
    ports:
      - 49152:49152/tcp
      - 49152:49152/udp
      - 49153:49153/tcp
      - 49153:49153/udp
      - 49154:49154/tcp
      - 49154:49154/udp
      - 49155:49155/tcp
      - 49155:49155/udp
      - 49156:49156/tcp
      - 49156:49156/udp
      - 8091:8091
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.qbittorrent.entrypoints=websecure"
      - "traefik.http.routers.qbittorrent.rule=Host(`get.delo.sh`)"
      - "traefik.http.routers.qbittorrent.tls=true"
      - "traefik.http.routers.qbittorrent.tls.certresolver=letsencrypt"
      - "traefik.http.services.qbittorrent.loadbalancer.server.port=8091"
      - "traefik.docker.network=proxy"

  vpn-monitor:
    image: alpine:latest
    container_name: vpn-monitor
    restart: always
    command: |
      sh -c '
      apk add --no-cache iproute2
      while true; do
        if ip addr show tun0 up > /dev/null 2>&1; then
          echo "vpn_connected 1" > /metrics
        else
          echo "vpn_connected 0" > /metrics
        fi
        sleep 30
      done'
    volumes:
      - /sys/class/net:/sys/class/net:ro

  qbittorrent:
    image: linuxserver/qbittorrent:latest
    container_name: qbittorrent
    restart: unless-stopped
    network_mode: "service:gluetun"
    environment:
      - WEBUI_PORT=8091
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - ./qbittorrent:/config
      - /home/delorenj/Downloads/apps:/apps
      - /home/delorenj/Downloads/incomplete:/incomplete
      - /home/delorenj/Downloads/inbox:/inbox
      - /home/delorenj/tonny:/tonny
      - emma_video:/video

    depends_on:
      - gluetun

  jellyfin:
    image: jellyfin/jellyfin
    container_name: jellyfin
    user: ${PUID}:${PGID}
    networks:
      - proxy
    ports:
      - "8096:8096"
      - "8920:8920" # HTTPS
      - "7359:7359/udp" # DLNA discovery
      - "1900:1900/udp" # UPnP discovery
    volumes:
      - ./jellyfin/config:/config
      - ./jellyfin/cache:/cache
      - /home/delorenj/tonny:/tonny
      - emma_video:/EmmaVideo
      - /home/delorenj/Videos:/BigChungusVideos
    restart: "unless-stopped"
    # Optional - alternative address used for autodiscovery
    environment:
      - JELLYFIN_PublishedServerUrl=https://movies.delo.sh
      - JELLYFIN_CAST_RECEIVER_APP_ID=F007D354
    # Optional - may be necessary for docker healthcheck to pass if running in host network mode
    extra_hosts:
      - "host.docker.internal:host-gateway"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jellyfin.entrypoints=websecure"
      - "traefik.http.routers.jellyfin.rule=Host(`movies.delo.sh`)"
      - "traefik.http.routers.jellyfin.tls=true"
      - "traefik.http.routers.jellyfin.tls.certresolver=letsencrypt"
      - "traefik.http.services.jellyfin.loadbalancer.server.port=8096"
      - "traefik.docker.network=proxy"

volumes:
  emma_video:
    name: emma_video
    driver: local
    driver_opts:
      type: nfs
      o: addr=192.168.1.50,rw,nfsvers=4
      device: ":/volume1/video"

networks:
  proxy:
    external: true
