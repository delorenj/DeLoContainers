services:
  gluetun:
    image: qmcgaw/gluetun
    container_name: gluetun
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
    environment:
      - VPN_SERVICE_PROVIDER=custom
      - OPENVPN_USER=${VPNAC_USER}
      - OPENVPN_PASSWORD=${VPNAC_PASSWORD}
      - OPENVPN_CUSTOM_CONFIG=/gluetun/netherlands.ovpn
      - FIREWALL_VPN_INPUT_PORTS=49152,49153,49154,49155,49156
    volumes:
      - ./gluetun:/gluetun
    ports:
      - 49152:49152/tcp
      - 49152:49152/udp
      - 49153:49153/tcp
      - 49153:49153/udp
      - 49154:49154/tcp
      - 49154:49154/udp
      - 49155:49155/tcp
      - 49155:49155/udp
      - 49156:49156/tcp
      - 49156:49156/udp
      - 8091:8091
    networks:
      - proxy

  vpn-monitor:
    image: alpine:latest
    container_name: vpn-monitor
    restart: unless-stopped
    command: |
      sh -c '
      apk add --no-cache iproute2
      while true; do
        if ip addr show tun0 up > /dev/null 2>&1; then
          echo "vpn_connected 1" > /metrics
        else
          echo "vpn_connected 0" > /metrics
        fi
        sleep 30
      done'
    volumes:
      - /sys/class/net:/sys/class/net:ro

  qbittorrent:
    image: linuxserver/qbittorrent:latest
    container_name: qbittorrent
    restart: unless-stopped
    network_mode: "service:gluetun"
    environment:
      - WEBUI_PORT=8091
      - PUID=1000
      - PGID=1000
    volumes:
      - ./qbittorrent:/config
      - ${DOWNLOAD_PATH}:/downloads
      - ${VIDEO_PATH}:/video
    depends_on:
      - gluetun
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.qbittorrent.entrypoints=websecure"
      - "traefik.http.routers.qbittorrent.rule=Host(`get.delo.sh`)"
      - "traefik.http.routers.qbittorrent.tls=true"
      - "traefik.http.routers.qbittorrent.tls.certresolver=letsencrypt"
      - "traefik.http.services.qbittorrent.loadbalancer.server.port=8091"
      - "traefik.docker.network=proxy"

  prowlarr:
    image: linuxserver/prowlarr:latest
    container_name: prowlarr
    restart: unless-stopped
    volumes:
      - ./prowlarr:/config
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prowlarr.entrypoints=websecure"
      - "traefik.http.routers.prowlarr.rule=Host(`prowlarr.delo.sh`)"
      - "traefik.http.routers.prowlarr.tls=true"
      - "traefik.http.routers.prowlarr.tls.certresolver=letsencrypt"
      - "traefik.http.services.prowlarr.loadbalancer.server.port=9696"

  jellyfin:
    image: linuxserver/jellyfin:latest
    container_name: jellyfin
    restart: unless-stopped
    volumes:
      - ./jellyfin:/config
      - ${VIDEO_PATH}:/media
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jellyfin.entrypoints=websecure"
      - "traefik.http.routers.jellyfin.rule=Host(`movies.delo.sh`)"
      - "traefik.http.routers.jellyfin.tls=true"
      - "traefik.http.routers.jellyfin.tls.certresolver=letsencrypt"
      - "traefik.http.services.jellyfin.loadbalancer.server.port=8096"

networks:
  proxy:
    external: true
