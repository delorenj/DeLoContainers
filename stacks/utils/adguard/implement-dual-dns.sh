#!/bin/bash
# Dual DNS Implementation Script - Router + Tailscale
# Generated by SPARC Focused Swarm

set -e
echo "🎯 IMPLEMENTING DUAL DNS STRATEGY..."

# Phase 1: Disable systemd-resolved DNS stub
echo "📡 Phase 1: Disabling systemd-resolved DNS stub..."
sudo mkdir -p /etc/systemd/resolved.conf.d
sudo tee /etc/systemd/resolved.conf.d/adguard.conf > /dev/null <<EOF
[Resolve]
DNSStubListener=no
DNS=127.0.0.1#53
Cache=yes
EOF

# Phase 2: Update resolv.conf to point directly to resolved
echo "🔧 Phase 2: Updating resolv.conf..."
sudo rm -f /etc/resolv.conf
sudo ln -sf /run/systemd/resolve/resolv.conf /etc/resolv.conf

# Phase 3: Restart systemd-resolved
echo "🔄 Phase 3: Restarting systemd-resolved..."
sudo systemctl restart systemd-resolved

# Wait for service to stabilize
sleep 3

# Phase 4: Verify port 53 is free
echo "✅ Phase 4: Verifying port 53 availability..."
if ss -tulnp | grep -q ":53.*LISTEN.*systemd"; then
    echo "⚠️ WARNING: systemd-resolved still listening on port 53"
    echo "Check: sudo systemctl status systemd-resolved"
    exit 1
fi

# Phase 5: Deploy AdGuard with port 53
echo "🚀 Phase 5: Deploying AdGuard on port 53..."
cd /home/delorenj/docker/trunk-main/stacks/utils/adguard
docker compose down
docker compose up -d

# Wait for container to start
sleep 10

# Phase 6: Test local DNS
echo "🧪 Phase 6: Testing local DNS resolution..."
if dig @127.0.0.1 google.com +short > /dev/null 2>&1; then
    echo "✅ Local DNS test: PASSED"
else
    echo "❌ Local DNS test: FAILED"
    exit 1
fi

# Phase 7: Test external access via Tailscale
echo "🌐 Phase 7: Testing Tailscale DNS access..."
if dig @100.66.29.76 google.com +short > /dev/null 2>&1; then
    echo "✅ Tailscale DNS test: PASSED"
else
    echo "⚠️ Tailscale DNS test: FAILED - check container networking"
fi

echo ""
echo "🎉 DUAL DNS IMPLEMENTATION COMPLETE!"
echo ""
echo "📋 Next Steps:"
echo "1. Set router DNS to: 192.168.1.12"
echo "2. Configure Tailscale Global DNS: 100.66.29.76"
echo "3. Test Roblox blocking on various devices"
echo ""
echo "🔧 Rollback available: ./backups/rollback-script.sh"